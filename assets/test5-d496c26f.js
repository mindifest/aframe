import"./test1-3cfb730f.js";import{S as o,R as h,V as d,a}from"./VRButton-57150ff7.js";import{g as c,a as l,b as v,c as m,d as p,H as n,n as w}from"./hotspot-846e0db8.js";import{p as g}from"./bht_01-de6b8ce2.js";class f{constructor(){this.intersects=[],this.width=window.innerWidth,this.height=window.innerHeight,this.container=document.getElementById("pano"),this.camera=c(50),this.scene=new o,this.hovered={},this.triggerPressed=!1,this.scenes=2,this.raycaster=new h,this.mouse=new d,this.renderer=l(),this.container.appendChild(this.renderer.domElement),this.container.appendChild(a.createButton(this.renderer)),this.pano=v(g),this.scene.add(this.pano),this.navigation=m(),this.scene.add(this.navigation),this.text=p(),this.scene.add(this.text),this.setControls(),this.setHotspots(),window.addEventListener("resize",this.onWindowResize.bind(this),!1),this.renderer.setAnimationLoop(this.render.bind(this))}render(){this.renderer.render(this.scene,this.camera)}onWindowResize(){this.camera.aspect=this.width/this.height,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.width,this.height),this.renderer.render(this.scene,this.camera)}setControls(){const t=r=>{this.triggerPressed||w(this.pano,this.scenes)},e=r=>{this.triggerPressed=!1},i=this.renderer.xr.getController(0);i.addEventListener("selectstart",t),i.addEventListener("selectend",e),this.scene.add(i);const s=this.renderer.xr.getController(1);s.addEventListener("selectstart",t),s.addEventListener("selectend",e),this.scene.add(s)}setHotspots(){const t=new n;t.position.set(1,0,-3),this.scene.add(t);const e=new n;e.position.set(-2,0,-3),this.scene.add(e)}events(){window.addEventListener("pointermove",t=>{this.mouse.set(t.clientX/this.width*2-1,-(t.clientY/this.height)*2+1),this.raycaster.setFromCamera(this.mouse,this.camera),this.intersects=this.raycaster.intersectObjects(this.scene.children,!0),Object.keys(this.hovered).forEach(e=>{if(this.intersects.find(s=>s.object.uuid===e)===void 0){const s=this.hovered[e];s.object.onPointerOver&&s.object.onPointerOut(s),delete this.hovered[e]}}),this.intersects.forEach(e=>{this.hovered[e.object.uuid]||(this.hovered[e.object.uuid]=e,e.object.onPointerOver&&e.object.onPointerOver(e)),e.object.onPointerMove&&e.object.onPointerMove(e)})}),window.addEventListener("click",t=>{this.intersects.forEach(e=>{e.object.onClick&&e.object.onClick(e)})})}}window.addEventListener("DOMContentLoaded",()=>{new f});
